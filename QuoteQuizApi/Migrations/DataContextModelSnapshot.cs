// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuoteQuizApi;

#nullable disable

namespace QuoteQuizApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModels.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contetnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("DataModels.Models.QuoteAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("QuoteAnswers");
                });

            modelBuilder.Entity("DataModels.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDisabled = false,
                            PasswordHash = new byte[] { 19, 123, 37, 88, 55, 135, 230, 226, 242, 99, 37, 88, 204, 98, 70, 151, 193, 125, 199, 246, 151, 240, 216, 6, 104, 25, 14, 30, 155, 144, 250, 6, 174, 216, 185, 213, 215, 58, 58, 179, 39, 185, 138, 141, 23, 183, 81, 111, 106, 32, 165, 246, 186, 149, 226, 95, 177, 155, 35, 115, 160, 69, 198, 216 },
                            PasswordSalt = new byte[] { 0, 27, 191, 137, 37, 82, 124, 14, 48, 230, 189, 22, 23, 52, 176, 74, 108, 82, 207, 234, 183, 19, 61, 43, 135, 157, 15, 5, 208, 48, 212, 165, 154, 237, 116, 253, 176, 170, 56, 35, 195, 147, 157, 139, 72, 20, 134, 186, 139, 186, 163, 86, 234, 45, 159, 32, 216, 172, 25, 28, 109, 77, 160, 170, 179, 230, 7, 112, 97, 45, 250, 33, 123, 51, 185, 167, 32, 136, 149, 77, 247, 79, 240, 229, 118, 31, 235, 84, 142, 151, 25, 89, 113, 30, 158, 181, 154, 20, 127, 185, 78, 54, 115, 159, 71, 57, 52, 218, 12, 229, 94, 180, 98, 176, 151, 11, 0, 234, 187, 162, 108, 53, 194, 107, 0, 65, 218, 167 },
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("DataModels.Models.Quote", b =>
                {
                    b.HasOne("DataModels.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DataModels.Models.QuoteAnswer", b =>
                {
                    b.HasOne("DataModels.Models.Quote", "Quote")
                        .WithMany("Answers")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("DataModels.Models.Quote", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
