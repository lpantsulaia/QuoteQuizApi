// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuoteQuizApi;

#nullable disable

namespace QuoteQuizApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220304095227_Quotes")]
    partial class Quotes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataModels.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contetnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("DataModels.Models.QuoteAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuoteId");

                    b.ToTable("QuoteAnswers");
                });

            modelBuilder.Entity("DataModels.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDisabled = false,
                            PasswordHash = new byte[] { 6, 120, 119, 131, 202, 39, 85, 175, 203, 93, 128, 69, 92, 123, 110, 186, 166, 113, 46, 80, 59, 173, 171, 25, 227, 41, 237, 83, 250, 198, 40, 118, 130, 99, 149, 219, 102, 112, 131, 198, 217, 197, 221, 84, 247, 60, 235, 206, 80, 190, 160, 64, 184, 16, 51, 94, 40, 151, 83, 183, 32, 115, 18, 113 },
                            PasswordSalt = new byte[] { 55, 171, 12, 3, 14, 22, 164, 107, 30, 54, 122, 196, 24, 211, 143, 226, 2, 121, 7, 236, 201, 3, 102, 214, 168, 9, 167, 212, 119, 158, 129, 235, 184, 200, 157, 101, 199, 102, 18, 97, 90, 16, 197, 30, 49, 53, 68, 110, 208, 86, 55, 232, 28, 113, 7, 232, 116, 100, 100, 211, 41, 106, 16, 45, 147, 197, 114, 120, 133, 124, 221, 51, 11, 44, 56, 104, 57, 71, 75, 164, 106, 125, 89, 80, 202, 214, 195, 171, 169, 184, 58, 0, 48, 197, 13, 101, 110, 160, 199, 106, 62, 108, 17, 44, 36, 41, 58, 0, 208, 80, 26, 136, 183, 11, 116, 226, 114, 15, 232, 12, 153, 255, 155, 183, 61, 240, 68, 65 },
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("DataModels.Models.Quote", b =>
                {
                    b.HasOne("DataModels.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("DataModels.Models.QuoteAnswers", b =>
                {
                    b.HasOne("DataModels.Models.Quote", "Quote")
                        .WithMany("Answers")
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quote");
                });

            modelBuilder.Entity("DataModels.Models.Quote", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
